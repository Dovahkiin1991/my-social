{"version":3,"sources":["components/Navbar/Friends/Friends.module.css","components/Users/users.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Topbar/Topbar.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Topbar/Topbar.jsx","components/Header/Header.jsx","components/Navbar/Navbar.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Users/Users.jsx","redux/users-reducer.js","components/Users/UsersContainer.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","redux/messages-reducer.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","friends","friends__item","poster","friends__title","userItem","userPhoto","pagination","selectedPage","main","nav","item","active","post","count","bar","time","header","posts","blocks","dialogs","dialogs__item","dialogs__item__active","messages__item","messages","sent","replies","Boolean","window","location","hostname","match","Topbar","react_default","a","createElement","className","classes","Date","toLocaleTimeString","Header","width","src","alt","Navbar","props","react_router_dom","to","activeClassName","initialState","postsData","id","message","likesCount","newPostText","profileReducer","state","arguments","length","undefined","action","type","newPost","Object","objectSpread","concat","toConsumableArray","newText","Post","likes","MyPosts","postsElements","map","MyPosts_Post_Post","key","newPostElement","React","createRef","ref","value","onChange","text","current","onPostChange","onClick","addPost","MyPostsContainer","connect","profilePage","dispatch","onPostChangeActionCreator","ProfileInfo","desc","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","store","Users","onPageChanged","pageNumber","_this","setCurrentPage","axios","totalUsersCount","then","response","setUsers","data","items","totalCount","setTotalUsersCount","_this2","this","currentPage","_this3","pagesCount","Math","ceil","pageSize","console","log","pages","i","push","users","u","styles","photos","small","followed","unfollow","follow","name","status","p","Component","usersReducer","userId","usersPage","followAC","unfollowAC","setUsersAC","DialogItem","path","user_avatar","Message","user_id","dialogsData","messagesData","newMessageText","messagesReducer","newMessage","Dialogs","dialogsPage","dialogsElements","dialog","Dialogs_DialogItem_DialogItem","messagesElements","Dialogs_Message_Message","newMessageElement","form","cols","rows","body","updateNewMessageBody","sendMessage","DialogsContainer","messagesPage","App","components_Topbar_Topbar","components_Header_Header","components_Navbar_Navbar","react_router","render","Dialogs_DialogsContainer","components_Profile_Profile","UsersContainer","title","sidebarReducer","reducers","combineReducers","sidebar","createStore","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fea5e0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1-Zf7\",\"friends__item\":\"Friends_friends__item__3Xml3\",\"poster\":\"Friends_poster__3OVcm\",\"friends__title\":\"Friends_friends__title__2rx_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"users_userItem__1MnD2\",\"userPhoto\":\"users_userPhoto__1_En6\",\"pagination\":\"users_pagination__3wI4e\",\"selectedPage\":\"users_selectedPage__1mnwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Navbar_main__3grHS\",\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"count\":\"Post_count__1Uc43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Topbar_bar__v72ih\",\"time\":\"Topbar_time__1FczJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blocks\":\"Dialogs_blocks__3FXq5\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs__item\":\"Dialogs_dialogs__item__2Ej2w\",\"dialogs__item__active\":\"Dialogs_dialogs__item__active__3f2x1\",\"messages__item\":\"Dialogs_messages__item__1ilm2\",\"messages\":\"Dialogs_messages__1w_Up\",\"sent\":\"Dialogs_sent__2DUcU\",\"replies\":\"Dialogs_replies__mrgAT\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React  from 'react';\nimport classes from './Topbar.module.css';\n\nconst Topbar = () => {\n    return <div className={classes.bar}>\n        <span className=\"time\">Today - <b>{new Date().toLocaleTimeString()}</b></span>\n    </div>;\n}\n\nexport default Topbar;","import React  from 'react';\nimport classes from './Header.module.css';\n\nconst Header = () => {\n    return <header className={classes.header}>\n        <img width=\"80\" src=\"https://placeit-assets.s3-accelerate.amazonaws.com/landing-pages/landing-page-redo-make-a-gaming-logo/Deadnauts-Esports-Logo-Maker.png\" alt=\"\"/>\n    </header>;\n}\n\nexport default Header;","import React  from 'react';\nimport classes from './Navbar.module.css';\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\nimport Friends from './Friends/Friends';\n\nconst Navbar = (props) => {\n    return (\n        <div className={classes.main}>\n            <nav className={classes.nav}>\n                <div className={classes.item}>\n                    <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/users\" activeClassName={classes.active}>Find friend</NavLink>\n                </div>\n            </nav>\n            {/* <Friends state={props.state.sidebar} /> */}\n        </div>\n    );\n}\n\nexport default Navbar;","const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nlet initialState ={\n    postsData : [\n        { id: 1, message: 'Hello', likesCount: 12},\n        { id: 2, message: 'Props send test', likesCount: 33}\n    ],\n    newPostText: \"Default\"\n}\nconst profileReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                likesCount: 0\n            };\n\n            return {\n                ...state,\n                newPostText: '',\n                postsData: [...state.postsData, newPost]\n            };\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return {\n                ...state,\n                newPostText: action.newText\n            };\n        }\n        default: \n            return state;\n    }\n\n    \n}\n\nexport const addPostActionCreater = () => ({type: ADD_POST });\nexport const onPostChangeActionCreator = (text) => (\n     {\n        type : UPDATE_NEW_POST_TEXT, newText : text\n     }\n);\n\nexport default profileReducer;","import React  from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n    return <div className={classes.post}>\n        <span>{props.message}</span>\n        <span className={classes.count}>Likes: <b>{props.likes}</b></span>\n    </div>\n}\n\nexport default Post;","import React  from 'react';\nimport Post from './Post/Post';\nimport classes from './MyPosts.module.css';\n\nconst MyPosts = (props) => {\n\n    let postsElements = props.posts\n        .map( posts => <Post key={posts.id} likes={posts.likesCount} message={posts.message} />);\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = () => {\n        props.addPost();\n    };\n\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        props.onPostChange(text);\n    }\n\n    return <div className={classes.posts}>\n        <h2>My posts</h2>\n        <div>New post</div>\n\n        <div>\n            <textarea ref={newPostElement} value={props.newPostText} onChange={onPostChange} />\n            <button onClick={ onAddPost }>Add post</button>\n        </div>\n        <div>\n            { postsElements }\n        </div>\n    </div>\n}\n\nexport default MyPosts;","import React  from 'react';\nimport {addPostActionCreater, onPostChangeActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onPostChange: (text) => {\n            dispatch(onPostChangeActionCreator(text));\n        },\n        addPost: () => {\n            dispatch(addPostActionCreater());\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React  from 'react';\nimport classes from './ProfileInfo.module.css';\n\nconst ProfileInfo = () => {\n    return <div>\n        <div>\n            <img src=\"https://www.bates.edu/wordpress/files/2016/07/pattern1.jpg\" alt=\"\"/>\n        </div>\n\n\n        <div>\n            <img width=\"80\" src=\"https://d1yn1kh78jj1rr.cloudfront.net/image/thumbnail/rGMF3jSims9o98x/storyblocks-flowers-in-a-garden-against-blue-sky-bottom-view_r8CAusDJM_thumb.jpg\" alt=\"\"/>\n            <span className={classes.desc}>Description</span>\n        </div>\n\n    </div>;\n}\n\nexport default ProfileInfo;","import React  from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport classes from './Profile.module.css';\n\nconst Profile = (props) => {\n\n    return <div>\n        <ProfileInfo />\n        <MyPostsContainer store={props.store} />\n    </div>;\n}\n\nexport default Profile;","import React from 'react';\nimport styles from './users.module.css';\nimport * as axios from 'axios';\n\nclass Users extends React.Component {\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.totalUsersCount}`).then(response => {\n            this.props.setUsers(response.data.items);\n\n            if (response.data.totalCount > 30) {\n                this.props.setTotalUsersCount(30);\n            } else {\n                this.props.setTotalUsersCount(response.data.totalCount);\n            }\n            \n        });\n    }\n    componentDidUpdate() {\n\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.totalUsersCount}`).then(response => {\n            this.props.setUsers(response.data.items);\n\n            if (response.data.totalCount > 30) {\n                this.props.setTotalUsersCount(30);\n            } else {\n                this.props.setTotalUsersCount(response.data.totalCount);\n            }\n        });\n    }\n    render () {\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\n        console.log(pagesCount);\n        let pages = [];\n\n        for (let i=1; i < pagesCount; i++) {\n            pages.push(i);\n        } \n\n        return <div>\n            {\n                this.props.users.map(u => <div key={u.id} className={styles.userItem}>\n                    <span>\n                        <div>\n                            <img className={styles.userPhoto} src={u.photos.small != null ? u.photos.small : \"https://upload.wikimedia.org/wikipedia/en/e/ee/Unknown-person.gif\"} alt=\"\"/>\n                        </div>\n                        <div>\n                            {u.followed \n                                ? <button onClick={ ()=> {this.props.unfollow(u.id)} }>Unfollow</button>\n                                : <button onClick={ ()=> {this.props.follow(u.id)} }>Follow</button> }\n                        </div>\n                    </span>\n                    <span>\n                        <span>\n                            <div>{u.name}</div>\n                            <div>{u.status}</div>\n                        </span>\n                        <span>\n                            <div>\n                                {\"u.location.country\"}\n                            </div>\n                            <div>\n                                {\"u.location.city\"}\n                            </div>\n                        </span>\n                    </span>\n                </div>)\n            }\n            <div className={styles.pagination}>\n                {\n                    pages.map(p => {\n                        return <span onClick={() => { this.onPageChanged(p) }} className={this.props.currentPage === p && styles.selectedPage}>{p}</span>\n                    })\n                }\n            </div>\n        </div>;\n    }\n}\n\nexport default Users;","const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\n\nlet initialState = {\n    users: [\n        \n    ],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage : 1\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS:\n            return {...state,  users: action.users  }\n        case SET_CURRENT_PAGE:\n            return {...state,  currentPage: action.currentPage }\n        case SET_TOTAL_USERS_COUNT:\n            return {...state,  totalUsersCount: action.count }\n        default: \n            return state;\n    }\n}\n\nexport const followAC = (userId) => ({type: FOLLOW, userId});\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCountAC = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count:totalUsersCount });\n\nexport default usersReducer;","import React  from 'react';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setTotalUsersCountAC } from '../../redux/users-reducer';\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount : state.usersPage.totalUsersCount,\n        currentPage : state.usersPage.currentPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId))\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n","import React  from 'react';\nimport classes from './../Dialogs.module.css';\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n    return <div className={classes.dialogs__item + ' ' + classes.dialogs__item__active}>\n        <NavLink to={path}>\n            <div className=\"poster\">\n                <img src={props.user_avatar} alt={props.name} />\n            </div>\n            {props.name}\n        </NavLink>\n    </div>;\n}\n\nexport default DialogItem;","import React  from 'react';\nimport classes from './../Dialogs.module.css';\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\n\nconst Message = (props) => {\n    return <li className={(props.user_id == 1 ? classes.sent : classes.replies)}>\n        <img src={props.user_avatar} alt=\"\"/>\n        <p>{props.message}</p>\n    </li>;\n}\n\nexport default Message;","const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\nlet initialState = {\n    dialogsData : [\n        { id: 1, name: 'Name 1', user_avatar: '/assets/img/user.png'},\n        { id: 2, name: 'Name 2', user_avatar: '/assets/img/user.png'},\n        { id: 3, name: 'Name 3', user_avatar: '/assets/img/user.png'},\n        { id: 4, name: 'Name 4', user_avatar: '/assets/img/user.png'},\n        { id: 5, name: 'Name 5', user_avatar: '/assets/img/user.png'}\n    ],\n    messagesData : [\n        { id: 1, user_id: 1, user_avatar: '/assets/img/user.png', message: 'Hi'},\n        { id: 2, user_id: 1, user_avatar: '/assets/img/user.png', message: 'Hi. user. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores eveniet necessitatibus reiciendis tempore velit! Consequuntur delectus dolorum mollitia nesciunt soluta? Ad adipisci amet aperiam aspernatur distinctio eveniet, neque numquam repellat! '},\n        { id: 3, user_id: 2, user_avatar: '/assets/img/user.png', message: 'Hi test'},\n        { id: 4, user_id: 1, user_avatar: '/assets/img/user.png', message: 'Test'},\n        { id: 5, user_id: 2, user_avatar: '/assets/img/user.png', message: 'Test hi'}\n    ],\n    newMessageText: 'Say, hi to your friend'\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_MESSAGE: \n            let newMessage = {\n                id: 6,\n                user_id: 1,\n                user_avatar: '/assets/img/user.png',\n                message: state.newMessageText,\n                likesCount: 0\n            };\n\n            return {\n                ...state,\n                newMessageText: '',\n                messagesData: [...state.messagesData, newMessage]\n                //spread with push newMessage\n            };\n        \n        case UPDATE_NEW_MESSAGE_TEXT: \n            return {\n                ...state,\n                newMessageText: action.newText\n            };\n        \n        default:\n            return state;\n    }\n\n}\n\nexport const addMessageCreater = () => ({ type: ADD_MESSAGE });\nexport const onMessageChangeActionCreator = (text) => (\n     {\n        type : UPDATE_NEW_MESSAGE_TEXT, newText : text\n     }\n);\n\nexport default messagesReducer;","import React  from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport MessageItem from './Message/Message';\n\nconst Dialogs = (props) => {\n    \n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogsData\n        .map(dialog => <DialogItem id={dialog.id} key={dialog.id} name={dialog.name} user_avatar={dialog.user_avatar} />);\n\n    let messagesElements = state.messagesData\n        .map( message => <MessageItem id={message.id} key={message.id} user_avatar={message.user_avatar} user_id={message.user_id} message={message.message} />);\n\n    let newMessageElement = React.createRef();\n\n    let addMessage = () => {\n        props.sendMessage();\n    };\n\n    let onMessageChange = () => {\n        let body = newMessageElement.current.value;\n        props.updateNewMessageBody(body);\n    }\n\n    return (\n        <div className={classes.blocks}>\n            <div className={classes.dialogs}>\n                { dialogsElements }\n            </div>\n\n            <div className={classes.messages}>\n                <ul>\n                    { messagesElements }\n                </ul>\n\n                <div className={classes.form}>\n                    <textarea name=\"\" id=\"\" cols=\"20\" rows=\"2\" ref={newMessageElement} value={props.newMessageText} onChange={onMessageChange}></textarea>\n                    <button onClick={ addMessage }>Send message</button>\n                </div>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Dialogs;","import React  from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport MessageItem from './Message/Message';\nimport {addMessageCreater, onMessageChangeActionCreator} from \"../../redux/messages-reducer\";\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.messagesPage,\n        newMessageText: state.messagesPage.newMessageText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessageBody: (body) => {\n            dispatch(onMessageChangeActionCreator(body));\n        },\n        sendMessage: () => {\n            dispatch(addMessageCreater());\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;","import React from 'react';\nimport Topbar from './components/Topbar/Topbar';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport UsersContainer from './components/Users/UsersContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport './App.css';\nimport {Route} from \"react-router-dom\";\n\nconst App = (props) => {\n  return (\n      <div className=\"wrapper\">\n          <Topbar />\n          <Header />\n          <Navbar state={props.state} />\n          <div className=\"wrapper-content\">\n              <Route path='/dialogs' render={ () => <DialogsContainer /> } />\n              <Route path='/profile' render={ () => <Profile /> } />\n              <Route path='/users' render={ () => <UsersContainer />  } />\n          </div>\n      </div>\n  );\n}\n\n\nexport default App;\n","let initialState = {\n    title : 'Friends',\n    friends : [\n        { id: 1, name: 'Name 1', user_avatar: '/assets/img/user.png'},\n        { id: 2, name: 'Name 2', user_avatar: '/assets/img/user.png'},\n        { id: 3, name: 'Name 3', user_avatar: '/assets/img/user.png'},\n        { id: 4, name: 'Name 4', user_avatar: '/assets/img/user.png'},\n        { id: 5, name: 'Name 5', user_avatar: '/assets/img/user.png'}\n    ]\n}\n\nconst sidebarReducer = (state = initialState, action) => {\n    \n    return state;\n}\n\nexport default sidebarReducer;","import {createStore, combineReducers} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport messagesReducer from \"./messages-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: messagesReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer\n});\n\nlet store = createStore(reducers);\n\nwindow.store = store; \n\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// rerenderEntireTree();\n\n// store.subscribe( () => {\n//     rerenderEntireTree();\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}